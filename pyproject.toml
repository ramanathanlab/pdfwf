[build-system]
requires = ["setuptools>=64.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "AdaParse"
version = "0.1.2"
authors = [
    {name = "Carlo Siebenschuh", email = "siebenschuh@uchicago.edu"},
    {name = "Kyle Hippe", email = "khippe@anl.gov"},
    {name = "Alexander Brace", email = "abrace@anl.gov"},
    {name = "Ozan Gokdemir", email = "ogokdemir@anl.gov"},
]
description = "Workflow for AdaParse (Adaptive Parallel PDF Parsing and Resource Scaling Engine)"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "parsl>=2024.2.5",
    "pydantic>=2.6.1",
    "typer[all]>=0.7.0",
    "transformers==4.38.2",
    "albumentations==1.4.11",
    "albucore==0.0.16",
    "fasttext>=0.9.3",
    "scikit-learn>=1.5.0",
    "nougat-ocr==0.1.17",
    "marker-pdf>=0.1.3,<=1.0.2",
    "PyMuPDF>=1.24.0",
    "pypdf>=4.2.0",
    "pytesseract>=0.3.13",
]

[project.urls]
homepage = "https://github.com/7shoe/AdaParse"
repository = "https://github.com/7shoe/AdaParse"

[project.scripts]
adaparse = "adaparse.cli:main"

[project.optional-dependencies]
dev = [
    "covdefaults>=2.2",
    "coverage",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
    "tox",
    "virtualenv",
    "typer-cli",
    "types-PyYAML",
]
docs = [
    "black",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-material",
    "mkdocs-section-index",
    "mkdocstrings[python]",
    "mike",
]

[tool.codespell]
skip = """
.git,
.github,
__pycache__,
build,
dist,
.*egg-info
"""

[tool.coverage.run]
plugins = ["covdefaults"]
omit = ["examples"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "testing.*"
allow_incomplete_defs = true
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_incomplete_defs = true
allow_untyped_defs = true

[tool.ruff]
# See all rules here: https://beta.ruff.rs/docs/rules
lint.select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    # isort
    "I",
    # pep8-naming
    "N",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-debugger
    "T10",
    # PyLint
    "PL",
    # ruff-specific
    "RUF",
]
line-length = 79
lint.extend-ignore = []
target-version = "py38"
lint.ignore = ["COM812", "ISC001"] # silence warning

[tool.ruff.lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "double" # silence warning

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["AdaParse", "test", "testing"]
order-by-type = false
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"*/*_test.py" = ["D10"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools.packages.find]
exclude = ["tests*", "testing*"]
namespaces = false
