# The directory containing the pdfs to convert
pdf_dir: /lus/eagle/projects/argonne_tpc/adaparse-scaling-data

# The directory to place the converted pdfs in
out_dir: /eagle/projects/argonne_tpc/siebenschuh/aurora_gpt/scaling_experiments/adafast_nodes_64_prod

# Input is .zip rather than .pdf
iszip: true

# Temporary directory
tmp_storage: '/dev/shm'

# Number of file chunks (1 for zip)
chunk_size: 1

# The settings for the pdf parser
parser_settings:
  # The name of the parser to use
  name: adafast

  # The Nougat parser settings
  # Recommended batch size of pages (not pdfs) is 10, maximum that fits into A100 40GB.
  batchsize: 10
  # Path to download the checkpoint to. if already exists, will use existing.
  checkpoint: /eagle/projects/argonne_tpc/siebenschuh/nougat-checkpoint
  # Set mmd_out to null if you don't want to write mmd files as a byproduct.
  mmd_out: null
  # If set to false, a will skip the pdfs that already have a parsed mmd file in mmd_out
  recompute: false
  # Set to true if you want to use fp32 instead of bfloat16 (false is recommended)
  full_precision: false
  # If set to true, output text will be formatted as a markdown file.
  markdown: true
  # Preempt processing a paper if mode collapse causes repetitions (true is recommended)
  skipping: true
  # Path for the nougat-specific logs for the run.
  nougat_logs_path: /eagle/projects/argonne_tpc/siebenschuh/aurora_gpt/tiny_test_pdf_set_to_adaparse/nougat_logs_64_prod

  # The AdaParse REGRESSOR (goddamit) settings
  # The path to ridge regression model ("weights")
  scikit_path: /lus/eagle/projects/argonne_tpc/siebenschuh/aurora_gpt/model_weights/scikit_pred/multioutput_model.pkl
  # The batch size for the classifier.
  fasttext_dir: /lus/eagle/projects/argonne_tpc/siebenschuh/aurora_gpt/fasttext
  # The maximum length of the input text (in characters).
  max_character_length: 3200
  # The minimum length of the input text to not be send into Nougat by default
  min_character_length: 10
  # The number of data workers for the classifier.
  num_data_workers: 1

# The compute settings for the workflow
compute_settings:
  # The name of the compute platform to use
  name: polaris
  # The number of compute nodes to use
  num_nodes: 64
  # Make sure to update the path to your conda environment and HF cache
  worker_init: "module use /soft/modulefiles; module load conda/2024-04-29; conda activate adaparse-wf"
  # The scheduler options to use when submitting jobs
  scheduler_options: "#PBS -l filesystems=home:eagle"
  # Make sure to change the account to the account you want to charge
  account: argonne_tpc
  # The HPC queue to submit to
  queue: prod
  # The amount of time to request for your job
  walltime: 00:60:00
